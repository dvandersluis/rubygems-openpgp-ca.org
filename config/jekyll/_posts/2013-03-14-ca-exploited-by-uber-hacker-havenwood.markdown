---
layout: post
published: true
title: CA Exploited by Uber-Hacker Havenwood! -or- How Revocation Works
---

CA Exploited by Uber-Hacker Havenwood!
======================================

On Feb-20-2013 at approximately 10:00 GMT a mysterious user known only
as [Havenwood](https://github.com/havenwood) was able to bypass
several layers of security and receive certification from the
authority without proper authentication.

He is believed to be a Caucasian male, between fifteen to fifty years
old, four to six feet high, weighing between one and three hundred
pounds.  If you have any information about his whereabouts, please
contact us.  If you encounter him in person, contact your local
authorities.  Do not attempt to apprehend him yourself.  He is rumored
to be armed and extremely dangerous.

### Actually, That's Not Quite What Happened

Havenwood submitted an application for certification.  Because of a
bug in the code, we did not realize that he never actually confirmed
his account, which meant that he never demonstrated that he actually
controlled the submitted private key.  In spite of this, we signed off
on his key.

### Game Over?

Nope.  If we've issued a signature in error, or later decide that a
previously authenticated user has malicious intent, we can revoke our
certification.

How Revocation Works
--------------------

Once the problem was discovered we were able to issue a revocation of
the original signature and send it off to the keyservers.  You can see
the
[revocation on pool.sks-keyservers.net](http://pool.sks-keyservers.net:11371/pks/lookup?op=vindex&fingerprint=on&search=0xCF61546750DBC4B4).

The line starting including **revoke** indicates our original signature
has been revoked.  You will no longer trust the authenticity of
Havenwood's key, at least based on our signature.  If you've
authenticated the key via other means, you'll still trust that and
ignore our revocation.

How Do Users Get the Revocation Certificate?
--------------------------------------------

For this revocation to take effect users would need to pull the
revocation down from the keyserver network.  If they've previously
downloaded the key and they never refresh it, they'll never know we
revoked our certification.

To encourage good keyring hygiene we've setup a rotating expiration
date on our signing key.  On May 17th, 2013 the signing key will
expire.  At that time we will bump up the expiration date and publish
this information.

If a user hasn't been keeping their keyring up-to-date, authentication
of users we have certified would start failing on their machine
because the system will think our signing key is expired.  They would
need to refresh their keyring by running:

    gpg --keyserver pool.sks-keyservers.net --refresh-keys

Performing this operation will grab an updated expiration date for our
signing key.  It will also grab our revocation of our signature
against Havenwood's key.  Any attempt to install software signed by
this key with the `--trust` option would now fail as the key will no
longer be trusted.

And that's how our revocation system works
------------------------------------------

Thanks for being a good sport Havenwood.
